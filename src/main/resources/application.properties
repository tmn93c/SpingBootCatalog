
server.port=8089
redis.host=localhost
redis.port=6379

# Logging pattern for the console
logging.pattern.console= "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
#logging pattern for file
logging.pattern.file= "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
logging.file.name=api.log
logging.level.jdbc.audit = off
logging.level.jdbc.sqlonly = info
logging.level.jdbc.connection = off
logging.level.jdbc.sqltiming = off
logging.level.jdbc.resultset = off
logging.level.jdbc.resultsettable = off

log4jdbc.auto.load.popular.drivers = false

log4jdbc.dump.sql.maxlinelength = 0
log4jdbc.dump.sql.addsemicolon = true

log4jdbc.trim.sql.extrablanklines = false

application-description=@project.description@
application-version=@project.version@
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
jwt.secret=javainuse1
app.jwtSecret= JWTSuperSecretKey
app.jwtExpirationInMs = 604800000
# Oracle
# spring.datasource.url=jdbc:oracle:thin:@localhost:1521/xe?createDatabaseIfNotExist=true&autoReconnect=true&useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
# spring.datasource.username=tamnd
# spring.datasource.password=tamnd
# spring.datasource.platform=org.hibernate.dialect.Oracle12gDialect
# spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
spring.jpa.hibernate.ddl-auto= update
#create-drop-update

# Postgres Sql
spring.datasource.hikari.poolName=SpringBootJPAHikariCP
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.show-sql=true
spring.datasource.url=jdbc:postgresql://localhost:5432/dbtest?ApplicationName=Webapps
# ApplicationName property for application_name in table pg_stat_activity
spring.datasource.username=postgres
spring.datasource.password=123456
spring.datasource.hikari.maximum-pool-size=1

# Mysql 
#spring.datasource.url=jdbc:mysql://localhost:3306/springbootLab?createDatabaseIfNotExist=true&autoReconnect=true&useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false&allowPublicKeyRetrieval=true
#spring.datasource.username=root
#spring.datasource.password=root
#spring.datasource.driver-class-name =com.mysql.jdbc.Driver
spring.jpa.generate-ddl=false
spring.jpa.show-sql=true
# logging.level.org.hibernate.SQL=debug
# logging.level.org.springframework.web=INFO
# logging.level.org.hibernate=INFO
# logging.file=D:/Microservices/MyMicroserviceEureka/BE/Catalog/logs/app.log
# logging.level.org.springframework.jdbc.core.JdbcTemplate=debug
# logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
# spring.application.name=item-catalog-service
# eureka.client.region = default
# eureka.client.registryFetchIntervalSeconds = 5
# eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
# spring.rabbitmq.listener.direct.auto-startup=false
# spring.rabbit.auto-startup=false
# spring.rabbitmq.host=localhost
# spring.rabbitmq.port=5672
# spring.rabbitmq.username=guest
# spring.rabbitmq.password=guest
# spring.cloud.stream.bindings.greetingChannel.destination = greetings
jasper.report.path=C:/Reports/


using.spring.schedulerFactory=true
# org.quartz.jobStore.class=org.quartz.impl.jdbcjobstore.JobStoreTX
# org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.StdJDBCDelegate
# org.quartz.jobStore.dataSource=quartzDataSource
# spring.quartz.job-store-type=jdbc
# The obvious drawback of the RAMJobStore is that it is volatile in nature. All the scheduling information is lost between shutdowns. If job definitions and schedules must be kept between shutdowns, the persistent JDBCJobStore must be used instead.
org.quartz.jobStore.class=org.quartz.simpl.RAMJobStore
spring.quartz.job-store-type=memory


spring.devtools.restart.log-condition-evaluation-delta=false


# Properties file for controlling db2sql.java

# MSSQL
#driver.url=jdbc:sqlserver://localhost:1433;databaseName=SGH5;username=sa;password=yourStrong(!)Password;
#driver.class=com.microsoft.sqlserver.jdbc.SQLServerDriver

# Information passed to DriverManger.getConnection
# ================================================
#
# Put any information here that you want to pass to the DriverManager, for example:
#user=&lt;sa&gt;
#password=&lt;yourStrong(!)Password&gt;

#Kafka
kafka.bootstrap-servers=localhost:9092
kafka.consumer.group-id=myGroup
kafka.enabled=false

mybatis.config-location=classpath:sql.xml
#mybatis.mapper-locations: mapper/*.xml